using Microsoft.Extensions.Localization;
using Application.Common.Commands;
using Application.Common.Enums;
using Application.%#MODULE#%.Commands;
using Application.%#MODULE#%.Interfaces;
using MediatR;

namespace Application.%#MODULE#%.CommandHandlers;

public class %##%AlterCommandHandler : IRequestHandler<%##%AlterCommand, ResponseCommand>
{
    private readonly IStringLocalizer _localizer;
    private readonly I%##%Repository _repository;

    public %##%AlterCommandHandler(IStringLocalizer localizer, I%##%Repository repository)
    {
        _localizer = localizer;
        _repository = repository;
    }

    public async Task<ResponseCommand> Handle(%##%AlterCommand request, CancellationToken cancellationToken)
    {
        var %#lower#% = await _repository.GetByIdAsync(request.Id);

        if(%#lower#% is null)
            return new ResponseCommand(ResponseStatusCommand.NotFound);

        %#lower#%.AlterName(request.Name);

        await _repository.UpdateAsync(%#lower#%);

        return new ResponseCommand(%#lower#%);
    }
}