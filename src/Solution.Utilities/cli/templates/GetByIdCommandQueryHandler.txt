using Microsoft.Extensions.Localization;
using Application.Common.Commands;
using Application.Common.Enums;
using Application.%#MODULE#%.CommandQueries;
using Application.%#MODULE#%.Interfaces;
using MediatR;

namespace Application.%#MODULE#%.CommandHandlers;

public class %##%GetByIdCommandQueryHandler : IRequestHandler<%##%GetByIdCommandQuery, ResponseCommand>
{
    private readonly IStringLocalizer _localizer;
    private readonly I%##%Repository _repository;

    public %##%GetByIdCommandQueryHandler(IStringLocalizer localizer, I%##%Repository repository)
    {
        _localizer = localizer;
        _repository = repository;
    }

    public async Task<ResponseCommand> Handle(%##%GetByIdCommandQuery request, CancellationToken cancellationToken)
    {
        var %#lower#% = await _repository.GetByIdAsync(request.Id);

        return %#lower#% is null ? new ResponseCommand(ResponseStatusCommand.NotFound) : new ResponseCommand(%#lower#%);
    }
}